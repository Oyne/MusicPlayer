@if (Albums.Count > 0)
{
    <div class="author-albums-area">
        <div class="info">
            <div class="more-by"><a>More by @AuthorName</a></div>
            <div class="see-discography"><a>See discography</a></div>
        </div>
        <div class="albums">
            @foreach (var album in Albums)
            {
                <TrackCollectionCard TrackCollection=album></TrackCollectionCard>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid? AlbumId { get; set; }

    public string? AuthorName { get; set; }

    public List<AlbumModel> Albums { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await InitializeAlbumsAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await InitializeAlbumsAsync();
        StateHasChanged();
    }

    private async Task InitializeAlbumsAsync()
    {
        using (var db = new PlayerContext())
        {
            var album = await db.Albums
                            .Include(a => a.Artist)
                            .FirstOrDefaultAsync(a => a.Id == AlbumId);
            if (album is not null)
            {
                Albums = await db.Albums
                               .Where(a => a.ArtistId == album.ArtistId)
                               .Where(a => a.Id != album.Id)
                               .ToListAsync();
                AuthorName = album.Artist.Name;
            }
        }
    }
}

