@page "/"
@inject IJSRuntime js
@implements IAsyncDisposable

<PageTitle>Index</PageTitle>

<div @ref=MainPanel class="main-area">
    <div class="tracks-area">
        <a class="title">Albums</a>
        <div class="albums-area">
            @if (Albums is not null)
            {
                @foreach (var album in Albums)
                {
                    <TrackCollectionCard TrackCollection=album></TrackCollectionCard>
                }
            }
        </div>
        <a class="title">Playlists</a>
        <div class="playlist-area">
            @if (Playlists is not null)
            {
                @foreach (var playlist in Playlists)
                {
                    <TrackCollectionCard TrackCollection=playlist></TrackCollectionCard>
                }
            }
        </div>
    </div>
</div>


@code
{
    IJSObjectReference? jsModule;
    ElementReference MainPanel;

    public List<AlbumModel>? Albums { get; set; }

    public List<PlaylistModel>? Playlists { get; set; }

    protected override void OnInitialized()
    {
        using (PlayerContext db = new PlayerContext())
        {
            Playlists = db.Playlists.ToList();
            Albums = db.Albums.ToList();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            jsModule = await js.InvokeAsync<IJSObjectReference>("import", "./Pages/Index.razor.js");
            await jsModule.InvokeVoidAsync("Index.LoadNextInit", DotNetObjectReference.Create(this), MainPanel);
        }
    }

    [JSInvokable]
    public void LoadNext()
    {
        Playlists?.Add(new PlaylistModel()
            {
                Id = Guid.NewGuid(),
                Image = Playlists[0].Image,
                Title = "Title"
            });
        StateHasChanged();
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (jsModule is not null)
        {
            await jsModule.DisposeAsync();
        }
    }
}

